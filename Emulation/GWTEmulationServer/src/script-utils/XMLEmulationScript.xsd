<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="http://mobilis.inf.tu-dresden.de/XMLEmulationScript" xmlns:tns="http://mobilis.inf.tu-dresden.de/XMLEmulationScript" elementFormDefault="qualified">
	
	<complexType name="parameterType">
		<sequence>
			<choice maxOccurs="unbounded">
				<element name="int" type="int"/>
				<element name="string" type="string"/>
				<element name="boolean" type="boolean"/>
				<element name="double" type="double"/>
			</choice>
		</sequence>
	</complexType>
	
	<element name="abstractInstance" abstract="true" substitutionGroup="tns:setupCommand" type="tns:abstractInstanceType"/>
	
	<complexType name="abstractInstanceType">
		<complexContent>
			<extension base="tns:setupCommandType">
				<attribute name="varName" type="NCName"/>
				<attribute name="appNS" type="string"/>
			</extension>
		</complexContent>
	</complexType>
	
	<element name="instance" substitutionGroup="tns:abstractInstance" type="tns:instanceType"/>
	
	<complexType name="instanceType">
		<complexContent>
			<extension base="tns:abstractInstanceType">
				<attribute name="instanceId" type="int"/>
			</extension>
		</complexContent>
	</complexType>
	
	<element name="instanceGroup" substitutionGroup="tns:abstractInstance" type="tns:instanceGroupType"/>
	
	<complexType name="instanceGroupType">
		<complexContent>
			<extension base="tns:abstractInstanceType">
				<attribute name="instanceCount" type="int"/>
				<attribute name="firstInstanceId" type="int"/>
			</extension>
		</complexContent>
	</complexType>
	
	<element name="for" substitutionGroup="tns:structure" type="tns:forType"/>
	
	<complexType name="forType">
		<complexContent>
			<extension base="tns:structureType">
				<attribute name="times" type="int"/>
			</extension>		
		</complexContent>
	</complexType>
	
	<element name="structure" abstract="true" substitutionGroup="tns:command" type="tns:structureType"/>
	
	<complexType name="structureType">
		<complexContent>
			<extension base="tns:commandType">
				<sequence>
					<choice>
						<element ref="tns:for"/>
						<!-- other loop types? -->
						<!-- a block issues code to be sent to the client in one block-->
						<element name="block"/>
					</choice>
					<element ref="tns:command" minOccurs="0" maxOccurs="unbounded"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	
	<element name="appCommand" substitutionGroup="tns:atomicCommand" type="tns:appCommandType"/>
	
	<complexType name="appCommandType">
		<complexContent>
			<extension base="tns:atomicCommandType">
				<sequence>
		            <element name="instance" type="NCName"/>
		            <element name="methodName" type="string"/>
					<element name="parameter" type="tns:parameterType" minOccurs="0" maxOccurs="unbounded"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	
	<element name="setupMethods" abstract="true" substitutionGroup="tns:setupCommand" type="tns:setupMethodsType"/>
	
	<complexType name="setupMethodsType">
		<complexContent>
			<extension base="tns:setupCommandType">
				<attribute name="instance" type="NCName"/>
			</extension>
		</complexContent>
	</complexType>
	
	<element name="start" substitutionGroup="tns:setupMethods" type="tns:startType"/>
	
	<complexType name="startType">
		<complexContent>
			<extension base="tns:setupMethodsType"/>
		</complexContent>
	</complexType>
	
	<element name="stop" substitutionGroup="tns:setupMethods" type="tns:stopType"/>
	
	<complexType name="stopType">
		<complexContent>
			<extension base="tns:setupMethodsType"/>
		</complexContent>
	</complexType>
	
	<element name="setupCommand" abstract="true" substitutionGroup="tns:atomicCommand" type="tns:setupCommandType"/>
	
	<complexType name="setupCommandType">
		<complexContent>
			<extension base="tns:atomicCommandType"/>
		</complexContent>
	</complexType>
	
	<element name="wait" substitutionGroup="tns:controlCommand" type="tns:waitType"/>
	
	<complexType name="waitType">
		<complexContent>
			<extension base="tns:controlCommandType">
				<attribute name="time" type="int"/>
			</extension>
		</complexContent>
	</complexType>
	
	<element name="controlCommand" substitutionGroup="tns:atomicCommand" type="tns:controlCommandType" abstract="true"/>
	
	<complexType name="controlCommandType">
		<complexContent>
			<extension base="tns:atomicCommandType"/>
		</complexContent>
	</complexType>
	
	<element name="atomicCommand" abstract="true" substitutionGroup="tns:command" type="tns:atomicCommandType"/>
	
	<complexType name="atomicCommandType">
		<complexContent>
			<extension base="tns:commandType"/>	
		</complexContent>
	</complexType>
	
	<element name="command" abstract="true" type="tns:commandType"/>
	
	<complexType name="commandType"/>

    <element name="script">
    	<complexType>
    		<sequence>
    			<element ref="tns:command" minOccurs="0" maxOccurs="unbounded"/>
    		</sequence>
    	</complexType>
    	<keyref name="instanceVarKeyRef" refer="tns:instanceKey">
			<selector xpath="./*"/>
			<field xpath="@instance"/>
		</keyref>
		<unique name="instanceKey">
			<selector xpath="./tns:instance|tns:instanceGroup"/>
			<field xpath="@varName"/>
		</unique>
    </element>
</schema>